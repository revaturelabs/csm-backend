openapi: 3.0.0
info:
  title: proj3
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  '/employees/{userId}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  Associates:
                    type: object
                    properties:
                      '':
                        type: object
                        properties:
                          name:
                            type: string
                          object:
                            type: object
                            properties:
                              Strengths:
                                type: string
                              Weaknesses:
                                type: string
                              Opportunities:
                                type: string
                              Threats:
                                type: string
                          Deactivated:
                            type: string
                          ID:
                            type: string
      operationId: get-user-userId
      description: Retrieve a user by ID
      parameters: []
    put:
      summary: ''
      operationId: put-employees-userId
      responses:
        '204':
          description: No Content
      description: Add a SWOT analysis to a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Strengths:
                  type: string
                Weaknesses:
                  type: string
                Opportunities:
                  type: string
                Threats:
                  type: string
                Notes:
                  type: string
  /employees:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Associate:
                      type: string
      operationId: get-associates
      parameters:
        - schema:
            type: string
          in: query
          name: status
          description: Get employees by status
      description: Retrieve all employees
    parameters: []
  /batches:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  BatchID:
                    type: number
                  Associates:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        object:
                          type: object
                          properties:
                            Strengths:
                              type: string
                            Weaknesses:
                              type: string
                            Opportunities:
                              type: string
                            Threats:
                              type: string
                        Deactivated:
                          type: string
                        ID:
                          type: string
                      required:
                        - ID
      operationId: get-batches
      description: Retrieve Batch information
      parameters:
        - schema:
            type: string
          in: query
          name: weekFilter
          description: This is an optional query to search by week
  '/employees/{userId}/evaluations':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    cat1:
                      type: integer
                    cat2:
                      type: integer
                    cat3:
                      type: integer
                    cat4:
                      type: integer
                    StartDate:
                      type: string
                    EndDate:
                      type: string
                    ID:
                      type: integer
                    skillInformation:
                      type: string
        '':
          description: "Retrieve a user's evaluations"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    cat1:
                      type: integer
                    cat2:
                      type: integer
                    cat3:
                      type: integer
                    startDate:
                      type: string
                    EndDate:
                      type: string
                    Grade:
                      type: integer
      operationId: get-associates-userId-evaluations
      description: "Retrieve a user's evaluations"
  '/employees/manager/{managerId}':
    parameters:
      - schema:
          type: string
        name: managerId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Name:
                      type: string
                    SWOT:
                      type: object
                      properties:
                        Strengths:
                          type: string
                        Weaknesses:
                          type: string
                        Opportunities:
                          type: string
                        Threats:
                          type: string
                        Notes:
                          type: string
                    ID:
                      type: string
                    Deactivated:
                      type: string
      operationId: get-associates-manager-managerId
      description: Get employees assigned to this manager
  /categories:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  Categories:
                    type: array
                    items:
                      type: string
        '':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      operationId: get-categories
      description: Retrieve the training/skill categories that associates can have
components:
  schemas: {}
